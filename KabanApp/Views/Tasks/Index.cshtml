@using KabanApp.Models
@using TaskStatusEnum = KabanApp.Models.TaskStatus
@model IEnumerable<TaskItem>


@{
    ViewData["Title"] = "Tasks";
}

<h1>Task Management</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Task</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>Created Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>
                    <span class="badge @(item.Status == TaskStatusEnum.Done ? "bg-success" : 
                                         item.Status == TaskStatusEnum.InProgress ? "bg-warning" : 
                                         item.Status == TaskStatusEnum.InReview ? "bg-info" :
                                         item.Status == TaskStatusEnum.Ready ? "bg-primary" : "bg-secondary")">
                        @Html.DisplayFor(modelItem => item.Status)
                    </span>
                </td>
                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                    <a asp-action="ConfirmDelete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <h4>No tasks found</h4>
        <p>Get started by <a asp-action="Create">creating your first task</a>.</p>
    </div>
}